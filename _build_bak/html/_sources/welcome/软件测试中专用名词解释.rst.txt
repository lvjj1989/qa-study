软件测试中专用名词解释
===============================


测试用例
---------------------------------
测试用例（Test Case），是指对一项特定的软件产品进行测试任务的描述,体现测试方案、方法、技术和策略。
基本内容应当包含前置条件、测试步骤、预期结果，在测试用例执行后应当包含实际结果、测试结果、执行时间、执行人。有时候也需要加上数据准备、测试环境、测试脚本等等


bug
--------------------------------
bug，直译成中文是臭虫的意思，很多人会把bug简单的理解为程序中个错误或异常。其实在软件测试中，对bug真正的定义应该是不符合需求的功能点。


冒烟测试
-------------------------------------
冒烟测试(smoking)，这一术语来源于硬件行业，对一个硬件或硬件组件进行更改或修复后，直接给设备加电。如果没有冒烟，则该组件就通过了基本的测试。在软件测试中，通常是指产品到达可提测阶段后，对主流程或者基本业务的测试，通常冒烟测试点时间尽量在半天内完成，若冒烟测试不通过可以直接打回，拒绝进行第一轮测试。冒烟测试可以由开发同学完成， 也可以由测试同学完成。



黑盒测试
----------------------------------
黑盒测试又称功能测试、数据驱动测试或基于规格说明的测试，在不考虑内部结构和内部特征、测试者只需要知道该程序输入和输出之间的关系或程序功能的情况下，依靠能够反映这一关系和程序功能需求规格的说明书，来确定测试用例和推断测试结果的正确性。软件的黑盒测试一般是用来确认软件功能的正确性和可操作性


白盒测试
-----------------------------------
白盒又称结构测试、逻辑驱动测试或基于程序测试。它依赖于程序细节的严密检验，针对特定的条件和循环集设计测试用例，对软件的逻辑路径进行测试。在程序的不同点检验程序的状态，来判断真实情况十分和预期的状态相一致。软件的白盒测试一般用例分析程序的内部结构


灰盒测试
------------------------------------
灰盒测试，是介于白盒测试与黑盒测试之间的一种测试，灰盒测试多用于集成测试阶段，不仅需要关注输出、输入的正确性，同时也需要关注程序内部的情况。灰盒测试不会像白盒那样详细和完整，但又比黑盒测试更关注程序的内部逻辑，常常是通过一些表征性的现象、事件、标志来判断内部的运行状态。

单元测试
---------------------------------------
单元测试(unit test)是指对软件中的最小可测试单元在与程序其他部分相隔离的情况下进行检查和验证的工作，最小可测试单元通常是指函数或者类。

单元测试通常由开发完成，一般会伴随开发代码一起递交至代码库。单元测试属于最严格的软件测试手段，是最接近代码底层实现的验证手段，可以在软件开发的早期以最小的成本保证局部代码的质量。单元测试都是以自动化的方式执行，在大量回归测试的场景下更能带来较高收益，缺点是比较耗费开发人员时间。



自动化测试
-------------------------------------
自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。通常，在设计了测试用例并通过评审之后，由测试人员根据测试用例中描述的规程一步步执行测试，得到实际结果与期望结果的比较。在此过程中，为了节省人力、时间或硬件资源，提高测试效率，便引入了自动化测试的概念，目前市面上比较多的是接口自动化测试和UI自动化测试。



性能测试
---------------------------------
通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试，具体可以查看性能测试专栏


